apiVersion: v1
kind: Service
metadata:
  labels:
    expose: "true"
    app: kafka-svc-0
  name: kafka-svc-0
spec:
  type: NodePort
  ports:
    - port: 30090
      targetPort: 30090
      name: kafka-port
      protocol: TCP
      nodePort: 30090
  selector:
      statefulset.kubernetes.io/pod-name: kafka-0

---
apiVersion: v1
kind: Service
metadata:
  labels:
    expose: "true"
    app: kafka-svc-1
  name: kafka-svc-1
spec:
  type: NodePort
  ports:
    - port: 30091
      targetPort: 30091
      name: kafka-port
      protocol: TCP
      nodePort: 30091
  selector:
      statefulset.kubernetes.io/pod-name: kafka-1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    expose: "true"
    app: kafka-svc-2
  name: kafka-svc-2
spec:
  type: NodePort
  ports:
    - port: 30092
      targetPort: 30092
      name: kafka-port
      protocol: TCP
      nodePort: 30092
  selector:
      statefulset.kubernetes.io/pod-name: kafka-2

---
apiVersion: v1
kind: Service
metadata:
  labels:
    expose: "true"
    app: kafka-head
  name: kafka-head
spec:
  ports:
    - port: 30092
      name: kafka-port
  clusterIP: None
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  serviceName: kafka-head
  replicas: 3
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: kafka
  # dymanic volume, auto create pv by using local-path-storage
  volumeClaimTemplates:
  - metadata:
      name: kafka-volume
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: local-path-storage
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: localhost:5000/kafka:23011912
        imagePullPolicy: IfNotPresent
        env:
        - name: VOTERS
          value: '3'
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: kafka-volume
          mountPath: /data/kafka/kafka-logs
        ports:
        - containerPort: 30092
          name: kafka-port
          protocol: TCP
        - containerPort: 9092
          name: broker-port
          protocol: TCP
        - containerPort: 9093
          name: controller-port
          protocol: TCP
      # make pod on different node    
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kafka
              topologyKey: kubernetes.io/hostname